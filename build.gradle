buildscript {
	// restdocsApiSpecVersion 버전 변수 설정
	ext {
		restdocsApiSpecVersion = '0.17.1'
		springCloudVersion = '2022.0.0'
		JJWT_RELEASE_VERSION = '0.11.5'
	}
}
plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.0'
	id 'io.spring.dependency-management' version '1.1.0'

	// Restdocs extension
	id 'com.epages.restdocs-api-spec' version "${restdocsApiSpecVersion}"
}

group = 'com.rocket'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// JPA + MySQL
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'com.mysql:mysql-connector-j'

	// QueryDSL
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// Rest Docs
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	testImplementation "com.epages:restdocs-api-spec-mockmvc:${restdocsApiSpecVersion}"

	// Security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.security:spring-security-test'

	// JWT
	implementation "io.jsonwebtoken:jjwt-api:${JJWT_RELEASE_VERSION}"
	runtimeOnly "io.jsonwebtoken:jjwt-impl:${JJWT_RELEASE_VERSION}"
	runtimeOnly "io.jsonwebtoken:jjwt-jackson:${JJWT_RELEASE_VERSION}"

	// Open Feign
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

	// Configuration Processor
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

task copyOasToSwagger {
	dependsOn 'openapi3'

	delete("src/main/resources/static/swagger-ui/openapi3.yaml")
	copy {
		from "$buildDir/api-spec/openapi3.yaml"
		into "src/main/resources/static/swagger-ui/."
	}
}

bootJar {
	dependsOn(':openapi3')
}

openapi3 {
	setServer("https://localhost:8080")
	title = 'Birthday API'
	description = 'Birthday API 명세서입니다!'
	version = '0.1.0'
	format = 'yaml'
}